{% set name = "duckdb" %}
{% set version = "1.3.1" %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
    # (!!) Please also update the git used for OVERRIDE_GIT_DESCRIBE in the build scripts.
  - url: https://github.com/duckdb/duckdb/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 6735519dc4a2deba55f1c348d5c5299fe204224a830c4b2ab1d323009f1ba4ef
    patches:
      - 0001-Dynamically-link-the-cli.patch  # [unix]
      - 0002-Remove-code-signature-before-applying-metadata-to-ex.patch
  - url: https://github.com/duckdb/duckdb-httpfs/archive/39779f89b16d0a35f04d3cfaf868e6366a2102f0.tar.gz
    sha256: b90aff0ca62209dee33e4fe8652164798cdc086cefd73973f02e7a64c2d37df6
    folder: extension/httpfs
  - url: https://github.com/duckdb/duckdb-fts/archive/3aa6a180b9c101d78070f5f7214c27552bb091c8.tar.gz
    sha256: 3cc83386a0b9e367b743cc6d4c5dbea233439077cae2a92c1ff126e40abb2912
    folder: extension/fts

build:
  number: 2
  skip: true  # [ppc64le]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja    # [not win]
  host:
    - icu      # [not win]
    - openssl

outputs:
  - name: libduckdb
    build:
      run_exports:
        - {{ pin_subpackage("libduckdb", max_pin="x.x.x") }}
    files:
      - lib/libduckdb*          # [not win]
      - Library/bin/duckdb.dll  # [win]
      - Library/bin/duckdb.lib  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja     # [not win]
        - python *  # [win]
      host:
        - openssl
        - icu       # [not win]
    test:
      commands:
        - test -f $PREFIX/lib/libduckdb${SHLIB_EXT}  # [not win]
  - name: libduckdb-devel
    build:
      run_exports:
        - {{ pin_subpackage("libduckdb", max_pin="x.x.x") }}
    files:
      - include/duckdb*.h          # [unix]
      - lib/cmake/duckdb           # [unix]
      - Library/include/duckdb*.h  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja     # [not win]
        - python *  # [win]
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - test -f $PREFIX/include/duckdb.h  # [not win]
  - name: duckdb-cli
    files:
      - bin/duckdb              # [unix]
      - Library\bin\duckdb.exe  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja     # [not win]
        - python *  # [win]
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}  # [not win]
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}  # [not win]
    test:
      commands:
        - duckdb -version
        - {{ RECIPE_DIR }}/test-builtin-extensions.sh  # [not win]
      requires:
        - jq
  - name: duckdb-extension-json
    script: noop.sh
    # Empty placeholder package as this now built-in
    # We need to use the same dependencies as in the main build to make it work in cross-compilation
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - ninja  # [not win]
        - macholib
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - exit 0
  - name: duckdb-extension-tpcds
    build:
      skip: true  # [win]
      binary_relocation: false
    script: install-extension.sh
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - ninja  # [not win]
        - python *
        - macholib
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - {{ RECIPE_DIR }}/test-extension.sh  # [not win]
      requires:
        - duckdb-cli
        - jq
  - name: duckdb-extension-autocomplete
    script: noop.sh
    # Empty placeholder package as this now built-in
    # We need to use the same dependencies as in the main build to make it work in cross-compilation
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - ninja  # [not win]
        - macholib
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - exit 0
  - name: duckdb-extension-tpcds
    build:
      skip: true  # [win]
      binary_relocation: false
    script: install-extension.sh
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - ninja  # [not win]
        - python *
        - macholib
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - {{ RECIPE_DIR }}/test-extension.sh  # [not win]
      requires:
        - duckdb-cli
        - jq
  - name: duckdb-extension-httpfs
    build:
      skip: true  # [win]
      binary_relocation: false
    script: install-extension.sh
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - ninja  # [not win]
        - python *
        - macholib
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
        - openssl
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - {{ RECIPE_DIR }}/test-extension.sh  # [not win]
      requires:
        - duckdb-cli
        - jq
  - name: duckdb-extension-fts
    build:
      skip: true  # [win]
      binary_relocation: false
    script: install-extension.sh
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - ninja  # [not win]
        - python *
        - macholib
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
        - openssl
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - {{ RECIPE_DIR }}/test-extension.sh  # [not win]
      requires:
        - duckdb-cli
        - jq
  - name: duckdb-extension-tpch
    build:
      skip: true  # [win]
      binary_relocation: false
    script: install-extension.sh
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - ninja  # [not win]
        - python *
        - macholib
      host:
        - {{ pin_subpackage("libduckdb", exact=True) }}
      run:
        - {{ pin_subpackage("libduckdb", exact=True) }}
    test:
      commands:
        - {{ RECIPE_DIR }}/test-extension.sh  # [not win]
      requires:
        - duckdb-cli
        - jq

about:
  home: https://www.duckdb.org/
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: An Embeddable Analytical Database
  description: |
    DuckDB is an embedded database designed to execute analytical SQL queries
    fast while embedded in another process. It is designed to be easy to
    install and easy to use.
  doc_url: https://duckdb.org/docs/index.html
  dev_url: https://github.com/duckdb/duckdb

extra:
  recipe-maintainers:
    - xhochy
    - janjagusch
    - flaviomartins
